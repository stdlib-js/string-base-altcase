{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar lowercase = require( '@stdlib/string-base-lowercase' );\nvar uppercase = require( '@stdlib/string-base-uppercase' );\nvar isEven = require( '@stdlib/math-base-assert-is-even' );\n\n\n// MAIN //\n\n/**\n* Converts a string to alternate case.\n*\n* @param {string} str - string to convert\n* @returns {string} alternate-cased string\n*\n* @example\n* var str = altcase( 'beep' );\n* // returns 'bEeP'\n*\n* @example\n* var str = altcase( 'beep boop' );\n* // returns 'bEeP BoOp'\n*\n* @example\n* var str = altcase( 'isMobile' );\n* // returns 'iSmObIlE'\n*\n* @example\n* var str = altcase( 'Hello World!' );\n* // returns 'hElLo wOrLd!'\n*/\nfunction altcase( str ) {\n\tvar out = '';\n\tvar i;\n\tfor ( i = 0; i < str.length; i++ ) {\n\t\tif ( isEven( i ) ) {\n\t\t\tout += lowercase( str[i] );\n\t\t} else {\n\t\t\tout += uppercase( str[i] );\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = altcase;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Convert a string to alternate case.\n*\n* @module @stdlib/string-base-altcase\n*\n* @example\n* var altcase = require( '@stdlib/string-base-altcase' );\n*\n* var str = altcase( 'aBcDeF' );\n* // returns 'aBcDeF'\n*\n* str = altcase( 'Hello World!' );\n* // returns 'hElLo wOrLd!'\n*\n* str = altcase( 'I am a robot' );\n* // returns 'i aM A RoBoT'\n*/\n\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAY,QAAS,+BAAgC,EACrDC,EAAY,QAAS,+BAAgC,EACrDC,EAAS,QAAS,kCAAmC,EA2BzD,SAASC,EAASC,EAAM,CACvB,IAAIC,EAAM,GACNC,EACJ,IAAMA,EAAI,EAAGA,EAAIF,EAAI,OAAQE,IACvBJ,EAAQI,CAAE,EACdD,GAAOL,EAAWI,EAAIE,CAAC,CAAE,EAEzBD,GAAOJ,EAAWG,EAAIE,CAAC,CAAE,EAG3B,OAAOD,CACR,CAKAN,EAAO,QAAUI,IC1BjB,IAAII,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "lowercase", "uppercase", "isEven", "altcase", "str", "out", "i", "main"]
}
